{"version":3,"sources":["components/Gifts.js"],"names":["Gifts","props","handleChange","event","value","target","name","console","log","context","categoriesNames","setState","category","open","filterItems","state","sortBy","handleToggle","bind","this","className","title","text","onClick","type","map","item","index","e","to","gifts","id","offer","symbol","image","bgCover","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundAttachment","backgroundSize","style","width","Component","SectionContainer"],"mappings":"8MAMMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAcVC,aAAc,SAACC,GACX,IAAMC,EAAQD,EAAME,OAAOD,MACrBE,EAAOH,EAAME,OAAOC,KAC1BC,QAAQC,IAAI,EAAKP,MAAMQ,QAAQC,iBAC/B,EAAKC,SAAS,CACVC,SAAUR,EACVS,MAAM,IAET,kBAAK,EAAKZ,MAAMQ,QAAQK,YAAYR,EAAMF,OArB3C,EAAKW,MAAQ,CACTH,SAAUX,EAAMQ,QAAQO,OACxBH,MAAM,GAEV,EAAKI,aAAe,EAAKA,aAAaC,KAAlB,gBANL,E,gDASnB,WACIC,KAAKR,SAAS,CACVE,MAAOM,KAAKJ,MAAMF,S,oBAgB1B,WAAU,IAAD,OACCD,EAAYO,KAAKJ,MAAjBH,SAEN,OACI,sBAAKQ,UAAU,gBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,cAAC,IAAD,CAAOC,MAAM,kBAAkBC,KAAK,wCAEpC,sBAAKF,UAAU,gBAAf,UACI,sBAAKA,UAAS,sBAAiBD,KAAKJ,MAAMF,KAAK,SAAS,MAAxD,UACI,oBAAIO,UAAU,iBAAiBG,QAASJ,KAAKF,aAA7C,SACI,6BACI,sBAAKG,UAAU,SAAf,UACI,uBAAOI,KAAK,QAAQlB,KAAK,UACzB,+BAAOM,GAAYA,WAK/B,oBAAIQ,UAAU,YAAd,SAEQD,KAAKlB,MAAMQ,QAAQC,gBAAgBe,KAAI,SAACC,EAAMC,GAC1C,OACI,6BACI,wBAAOP,UAAU,SAAjB,UACI,uBAAOI,KAAK,QAAQlB,KAAK,QAAQF,MAAOsB,EAAMH,QAAS,SAACK,GAAD,OAAK,EAAK1B,aAAa0B,MAC9E,+BAAOF,QAHNC,WAWjC,qBAAKP,UAAU,cAAf,SACA,cAAC,IAAD,CAAMS,GAAG,IAAT,8BAIJ,qBAAKT,UAAU,YAAf,SAEYD,KAAKlB,MAAMQ,QAAQqB,MAAML,KAAI,SAACC,GAC1B,IAAOK,EAA4BL,EAA5BK,GAAIC,EAAwBN,EAAxBM,MAAOC,EAAiBP,EAAjBO,OAAQC,EAASR,EAATQ,MACpBC,EAAU,CACZC,gBAAiB,cACjBC,gBAAgB,OAAD,OAASH,EAAT,KACfI,iBAAiB,YACjBC,mBAAmB,QACnBC,qBAAqB,SACrBC,eAAgB,SAEpB,OACI,qBAAKrB,UAAS,eAAUW,EAAV,gBAAqCW,MAAOP,EAA1D,SACI,+BAAKH,EAAL,IAAY,+BAAOC,QADwBF,QAOnE,cAAC,IAAD,CAAeY,MAAM,e,GAvFjBC,aA6FLC,sBAAiB7C","file":"static/js/5.7bcb07f6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Title from './Title'\r\nimport SeperatorLine from './SeperatorLine'\r\nimport {SectionContainer} from '../context'\r\n\r\nclass Gifts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: props.context.sortBy,\r\n            open: false,\r\n        };\r\n        this.handleToggle = this.handleToggle.bind(this)\r\n    }\r\n\r\n    handleToggle(){\r\n        this.setState({\r\n            open: !this.state.open,\r\n        })\r\n    }\r\n\r\n    handleChange =(event)=>{\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        console.log(this.props.context.categoriesNames)\r\n        this.setState({\r\n            category: value,\r\n            open: false,\r\n        }\r\n        ,()=> this.props.context.filterItems(name, value)\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const{category} = this.state;\r\n        \r\n        return (\r\n            <div className=\"gifts-section\">\r\n                <div className=\"row\">\r\n                    <Title title='gifts on budget' text='choose your gift within your budget' />\r\n\r\n                    <div className=\"right-buttons\">\r\n                        <div className={`select-wrap ${this.state.open?'active':null}`}>\r\n                            <ul className=\"default-option\" onClick={this.handleToggle}>\r\n                                <li>\r\n                                    <div className=\"option\">\r\n                                        <input type=\"radio\" name=\"gifts\" />\r\n                                        <span>{category && category}</span>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                            \r\n                            <ul className=\"select-ul\">\r\n                                {\r\n                                    this.props.context.categoriesNames.map((item, index) =>{\r\n                                        return (\r\n                                            <li key={index}>\r\n                                                <label className=\"option\">\r\n                                                    <input type=\"radio\" name=\"gifts\" value={item} onClick={(e)=>this.handleChange(e)}/>\r\n                                                    <span>{item}</span>\r\n                                                </label>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    <div className=\"btn-viewall\">\r\n                    <Link to=\"/\" >view all</Link>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"gift-grid\">\r\n                        {\r\n                            this.props.context.gifts.map((item) => {\r\n                                const {id, offer, symbol, image} = item;\r\n                                const bgCover = {\r\n                                    backgroundColor: 'transparent',\r\n                                    backgroundImage: `url(${image})`,\r\n                                    backgroundRepeat: `no-repeat`,\r\n                                    backgroundPosition: `0% 0%`,\r\n                                    backgroundAttachment: `scroll`,\r\n                                    backgroundSize: 'cover',\r\n                                }\r\n                                return (\r\n                                    <div className={`gift-${id} single-gift`} key={id} style={bgCover}>\r\n                                        <h2>{offer} <span>{symbol}</span></h2>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n                <SeperatorLine width='30%'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SectionContainer(Gifts)\r\n"],"sourceRoot":""}