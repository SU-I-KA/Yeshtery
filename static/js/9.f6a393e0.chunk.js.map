{"version":3,"sources":["components/Product.js","components/ProductsList.js"],"names":["Product","props","state","full","empty","makeArray","bind","temp","i","this","product","rate","push","j","setState","title","image","price","brand","pickup","className","src","alt","value","symbol","img","map","s","index","icons","star","emptyStar","Component","ProductsList","handleChange","event","target","console","log","context","categoriesNames","category","open","getProducts","showMore","selectedProducts","count","counter","length","error","active","msg","sortBy","initialCount","handleToggle","prevProps","prevState","Title","text","onClick","type","name","item","e","to","slice","id","SectionContainer"],"mappings":"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","file":"static/js/9.f6a393e0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            full: [],\r\n            empty: []\r\n        };\r\n        this.makeArray = this.makeArray.bind(this)\r\n    }\r\n    \r\n    makeArray(){\r\n        let temp = [];\r\n        let empty = [];\r\n        for (let i = 0; i < this.props.product.rate; i++) {\r\n            temp.push(i);\r\n        }\r\n        for (let j = 0; j < 5 - this.props.product.rate; j++) {\r\n            empty.push(j);\r\n        }\r\n        this.setState({\r\n            full: temp,\r\n            empty: empty,\r\n        })\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        this.makeArray()\r\n    };\r\n\r\n    render() {\r\n        const {title, image, price, brand, rate, pickup} = this.props.product;\r\n        return (\r\n            <div className=\"single-product\">\r\n                <div className=\"img-container\">\r\n                    <img src={image} alt={title}/>\r\n                </div>\r\n                <h3>{title}</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"price\">{price.value} <span>{price.symbol}</span></div>\r\n                    <img src={brand.img} alt={title} />\r\n                </div>\r\n                <div className=\"rate-wrap\">\r\n                    <div className=\"stars\">\r\n                    {\r\n                        this.state.full.map((s, index)=>{\r\n                            return(\r\n                            <img src={this.props.icons.star} key={index} alt='star'/>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        this.state.empty.map((s, index)=>{\r\n                            return(\r\n                                <img src={this.props.icons.emptyStar} key={index} alt='star'/>\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n                    <div className=\"rate\">{rate} of 5</div>\r\n                </div>\r\n                <div className=\"pickup\">pickup from: <span>{pickup}</span></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Title from './Title'\r\nimport {SectionContainer} from '../context'\r\nimport Product from './Product';\r\n\r\nclass ProductsList extends Component {\r\n\r\n    // getDta(data) {\r\n    //     return new Promise((resolve) =>\r\n    //         setTimeout(() => resolve(data), 0)\r\n    //     );\r\n    // }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: props.context.sortBy,\r\n            counter: props.context.initialCount || 4,\r\n            error: {active: false, msg: ''},\r\n            open: false,\r\n        };\r\n        this.handleToggle = this.handleToggle.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n      if (this.state.category !== prevState.category) {\r\n            this.setState({\r\n                counter: this.props.context.initialCount,\r\n                error: {active: false, msg: ''}\r\n            })\r\n        }\r\n    }\r\n\r\n    handleToggle(){\r\n        this.setState({\r\n            open: !this.state.open,\r\n        })\r\n    }\r\n\r\n    handleChange =(event)=>{\r\n        const value = event.target.value;\r\n        console.log(this.props.context.categoriesNames)\r\n        this.setState({\r\n            category: value,\r\n            open: false,\r\n        }\r\n        ,()=> this.props.context.getProducts(value)\r\n        )\r\n    }\r\n\r\n    showMore = () =>{\r\n    let {selectedProducts} = this.props.context;\r\n    const count = this.state.counter + 1;\r\n    if (count > selectedProducts.length){\r\n      return this.setState({\r\n        error: {active: true, msg: `that's it. no more!`}\r\n      })\r\n    }\r\n    else{\r\n      return this.setState ({\r\n        counter: count,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n    render() {\r\n        const{category, counter} = this.state;\r\n\r\n        return (\r\n            <div className=\"products-section\">\r\n                <div className=\"row\">\r\n                    <Title title='our special selection' text='premium products recommended just for you' />\r\n\r\n                    <div className=\"right-buttons\">\r\n                        <div className={`select-wrap ${this.state.open?'active':null}`}>\r\n                            <ul className=\"default-option\" onClick={this.handleToggle}>\r\n                                <li>\r\n                                    <div className=\"option\">\r\n                                        <input type=\"radio\" name=\"selectedProducts\" />\r\n                                        <span>{category && category}</span>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                            \r\n                            <ul className=\"select-ul\">\r\n                                {\r\n                                    this.props.context.categoriesNames.map((item, index) =>{\r\n                                        return (\r\n                                            <li key={index}>\r\n                                                <label className=\"option\">\r\n                                                    <input type=\"radio\" name=\"selectedProducts\" value={item} onClick={(e)=>this.handleChange(e)}/>\r\n                                                    <span>{item}</span>\r\n                                                </label>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    <div className=\"btn-viewall\">\r\n                    <Link to=\"/\" >view all</Link>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {this.props.context.selectedProducts.length > 0 ? \r\n                <div className=\"product-grid\">\r\n                        {\r\n                            this.props.context.selectedProducts.slice(0, counter).map((item) => {\r\n                                return (\r\n                                    <Product key={item.id} product={item} icons={this.props.context.icons}/>\r\n                                )\r\n                            })\r\n                        }\r\n                        \r\n                </div> : <div className='no-more'>no products in that category</div>}\r\n\r\n                {this.props.context.selectedProducts.length > 0 &&\r\n                <div className=\"more-section\">\r\n                {this.state.error.active ? <div className='no-more'>{this.state.error.msg}</div> :\r\n                <button className='btn-more' onClick={this.showMore}>show more</button>}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SectionContainer(ProductsList)\r\n"],"sourceRoot":""}